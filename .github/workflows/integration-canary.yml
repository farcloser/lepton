# This pipeline purpose is solely meant to run a subset of our test suites against upcoming or unreleased dependencies versions
name: canary

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  UBUNTU_VERSION: "24.04"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  env:
    uses: ./.github/workflows/environment.yml

  linux:
    needs: env
    timeout-minutes: ${{ fromJSON(needs.env.outputs.TIMEOUT_LONG) }}
    name: linux
    runs-on: ${{ needs.env.outputs.RUNNER_LINUX_STABLE }}
    env:
      GO_VERSION: canary
    steps:
      - name: "Clone"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: "Setup"
        uses: ./.github/actions/node
        with:
          go: canary
      - name: "Prepare integration test environment"
        run: |
          # Build integration image with updated dependencies
          . ./hack/build-integration-canary.sh
          LOG_LEVEL=info canary::build::integration
      - name: "Remove snap loopback devices (conflicts with our loopback devices in TestRunDevice)"
        run: |
          sudo systemctl disable --now snapd.service snapd.socket
          sudo apt-get purge -qq snapd
          sudo losetup -Dv
          sudo losetup -lv
      - name: "Register QEMU"
        run: |
          # FIXME: replace by a fixed version download
          make build
          sudo make install

          sudo lepton run --net none --privileged --rm tonistiigi/binfmt --install linux/amd64 || true
          sudo lepton run --net none --privileged --rm tonistiigi/binfmt --install linux/arm64 || true
      - name: "Run integration tests"
        run: docker run -t --rm --privileged test-integration ./hack/test-integration.sh -test.only-flaky=false
      - name: "Run integration tests (flaky)"
        run: docker run -t --rm --privileged test-integration ./hack/test-integration.sh -test.only-flaky=true

  windows:
    needs: env
    timeout-minutes: ${{ fromJSON(needs.env.outputs.TIMEOUT_LONG) }}
    name: windows
    runs-on: ${{ needs.env.outputs.RUNNER_WINDOWS_CANARY }}
    defaults:
      run:
        shell: bash
    steps:
      - name: "Clone"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: "Setup"
        uses: ./.github/actions/node
        with:
          go: canary
      # TODO: cache these
      # FIXME: caching? Takes ~30s
      - name: "Setup CNI"
        run: |
          [ "$RUNNER_OS" != Windows ] || GOPATH=$(go env GOPATH) ./hack/provisioning/windows/cni.sh
      - name: "Setup containerd"
        run: |
          # Get latest tagged containerd
          args=(curl --proto '=https' --tlsv1.2 -fsSL -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28")
          [ "${GITHUB_TOKEN:-}" == "" ] && {
            echo "GITHUB_TOKEN is not set - you might face rate limitations with the Github API"
          } || args+=(-H "Authorization: Bearer $GITHUB_TOKEN")
          ctd_v="$("${args[@]}" https://api.github.com/repos/containerd/containerd/tags | jq -rc .[0].name)"
          export ctrdVersion="${ctd_v:1}"
          powershell ./hack/provisioning/windows/containerd.ps1

      # FIXME: make install is not portable to windows
      - name: "Build and install cli"
        run: go install ./cmd/lepton
      - name: "Run integration tests"
        run: ./hack/test-integration.sh -test.only-flaky=false
      - name: "Run integration tests (flaky)"
        run: ./hack/test-integration.sh -test.only-flaky=true
