name: basic

# Note: this currently does not run on Windows environments, as mingw/make does mess up the path
# preventing golangci-lint from finding go.
# Also note that the arm runner does not come with yamllint installed.
# This does not matter much for now, as lint tasks are designed to execute for all required OS/ARCH targets.

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:

jobs:
  lint:
    name: "lint"
    uses: ./.github/workflows/lint.yml

  env:
    name: "init"
    uses: ./.github/workflows/environment.yml

#  lint:
#    needs: env
#    timeout-minutes: ${{ fromJSON(needs.env.outputs.TIMEOUT_SHORT) }}
#    name: lint | go ${{ matrix.go}} | ${{ matrix.runner }}
#    runs-on: ${{ matrix.runner }}
#    defaults:
#      run:
#        shell: bash
#
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - runner: ${{ needs.env.outputs.RUNNER_LINUX_STABLE }}
#            go: ${{ needs.env.outputs.GO_STABLE }}
#          - runner: ${{ needs.env.outputs.RUNNER_LINUX_CANARY }}
#            go: ${{ needs.env.outputs.GO_CANARY }}
#
#    steps:
#      - name: "Clone"
#        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
#        with:
#          fetch-depth: 100
#      - name: "Setup"
#        uses: ./.github/actions/node
#        with:
#          go-version: ${{ matrix.go }}
#      - name: "Linting"
#        env:
#          VERBOSE: true
#          NO_COLOR: true
#        run: |
#          export LINT_COMMIT_RANGE="$(jq -r '.after + "..HEAD"' ${GITHUB_EVENT_PATH})"
#          make lint

  unit:
    needs: env
    timeout-minutes: ${{ fromJSON(needs.env.outputs.TIMEOUT_SHORT) }}
    name: unit | go ${{ matrix.go }} | ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ${{ needs.env.outputs.RUNNER_WINDOWS_STABLE }}
            go: ${{ needs.env.outputs.GO_STABLE }}
          - runner: ${{ needs.env.outputs.RUNNER_LINUX_STABLE }}
            go: ${{ needs.env.outputs.GO_STABLE }}
          - runner: ${{ needs.env.outputs.RUNNER_LINUX_CANARY }}
            go: ${{ needs.env.outputs.GO_CANARY }}

    steps:
      - name: "Clone"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: "Setup"
        uses: ./.github/actions/node
        with:
          go-version: ${{ matrix.go }}
      # FIXME: caching? Takes ~30s
      - name: "Setup CNI"
        run: |
          [ "$RUNNER_OS" != Windows ] || GOPATH=$(go env GOPATH) ./hack/provisioning/windows/cni.sh
      - name: "Unit testing"
        run: |
          make test-unit

  build:
    needs: env
    timeout-minutes: ${{ fromJSON(needs.env.outputs.TIMEOUT_SHORT) }}
    name: build | go ${{ matrix.go }} | ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ${{ needs.env.outputs.RUNNER_WINDOWS_STABLE }}
            go: ${{ needs.env.outputs.GO_STABLE }}
          - runner: ${{ needs.env.outputs.RUNNER_LINUX_AMD64_STABLE }}
            go: ${{ needs.env.outputs.GO_STABLE }}
          - runner: ${{ needs.env.outputs.RUNNER_LINUX_ARM64_STABLE }}
            go: ${{ needs.env.outputs.GO_STABLE }}
          - runner: ${{ needs.env.outputs.RUNNER_WINDOWS_CANARY }}
            go: ${{ needs.env.outputs.GO_CANARY }}
          - runner: ${{ needs.env.outputs.RUNNER_LINUX_CANARY }}
            go: ${{ needs.env.outputs.GO_CANARY }}

    steps:
      - name: "Clone"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: "Setup"
        uses: ./.github/actions/node
        with:
          go-version: ${{ matrix.go }}
      - name: "Building"
        run: |
          GOOS=linux GOARCH=amd64 make build
          GOOS=linux GOARCH=arm64 make build
          GOOS=windows make build
