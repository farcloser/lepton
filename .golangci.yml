version: "2"

run:
  modules-download-mode: readonly
  issues-exit-code: 2
  tests: true
  allow-parallel-runners: true
  allow-serial-runners: true

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

linters:
  default: all

  enable:
    # These are the default set of golangci
    # TODO: enable
    # - errcheck          # Errcheck is a program for checking for unchecked errors in Go code. These unchecked errors can be critical bugs in some cases.
    - govet             # Vet examines Go source code and reports suspicious constructs. It is roughly the same as 'go vet' and uses its passes.
    - ineffassign       # Detects when assignments to existing variables are not used.
    - staticcheck       # It's the set of rules from staticcheck.
    - unused            # Checks Go code for unused constants, variables, functions and types.
    # These are the linters we knowingly want enabled in addition to the default set
    - containedctx      # avoid embedding context into structs
    - depguard          # Allows to explicitly allow or disallow third party modules
    - err113            # encourage static errors
    - forcetypeassert   # not asserting is risky and bad influence for newcomers
    - gochecknoglobals  # globals should be avoided as much as possible
    - godot             # forces dot at the end of comments
    - gosec             # various security checks
    - interfacebloat    # limit complexity in public APIs
    - paralleltest      # enforces tests using parallel
    - revive            # meta linter (see settings below)
    - testpackage       # test packages should be separate from the package they test (eg: name them package_test)
    - testableexamples  # makes sure that examples are testable (have an expected output)
    - thelper           # enforces use of t.Helper()
    - varnamelen        # encourage readable descriptive names for variables instead of x, y, z

  disable:
    # These are the linters that we know we do not want
    - cyclop          # provided by revive
    - exhaustruct     # does not serve much of a purpose
    - funlen          # provided by revive
    - gocognit        # provided by revive
    - goconst         # provided by revive
    - godox           # not helpful unless we could downgrade it to warning / info
    - ginkgolinter    # no ginkgo
    - gomodguard      # we use depguard instead
    - ireturn         # too annoying with not enough value
    - lll             # provided by golines
    - nonamedreturns  # named returns are occasionally useful
    - prealloc        # premature optimization
    - promlinter      # no prometheus
    - sloglint        # no slog
    - testifylint     # no testify
    - zerologlint     # no zerolog

    - contextcheck
    - dupl
    - err113
    - errcheck
    - exhaustive
    - forcetypeassert
    - gochecknoglobals
    - gocyclo
    - godot
    - gosec
    - ireturn
    - maintidx
    - mnd
    - musttag
    - nestif
    - nilnil
    - nlreturn
    - paralleltest
    - protogetter
    - tagliatelle
    - testpackage
    - thelper
    - tparallel
    - varnamelen
    - whitespace
    - wrapcheck
    - wsl

  settings:
    interfacebloat:
      # Default is 10
      max: 13
    depguard:
      rules:
        main:
          files:
            - $all
            - '!**/leptonic/**/*'
          deny:
            - pkg: github.com/hashicorp/golang-lru
              desc: Do not allow direct use of IBM patented NewARC
            - pkg: github.com/sirupsen/logrus
              desc: we use Zerolog
            - pkg: github.com/bugsnag/bugsnag-go
              desc: we use Sentry
            - pkg: github.com/pkg/errors
              desc: should be replaced by standard lib errors package
            - pkg: github.com/opencontainers
              desc: use farcloser containers library instead
            - pkg: github.com/containerd/cgroups
              desc: use farcloser containers library instead
            - pkg: github.com/containerd/containerd/v2/contrib/apparmor
              desc: use farcloser containers library instead
            - pkg: github.com/containerd/containerd/v2/contrib/seccomp
              desc: use farcloser containers library instead
            - pkg: github.com/distribution
              desc: use farcloser containers library instead
            - pkg: github.com/fluent
            - pkg: github.com/Microsoft/hcsshim
            - pkg: github.com/Microsoft/go-winio
        no-patent:
          files:
            - $all
          deny:
            - pkg: github.com/hashicorp/golang-lru/arc/v2
              desc: patented (https://github.com/hashicorp/golang-lru/blob/arc/v2.0.7/arc/arc.go#L18)
        pkg:
          files:
            - '**/pkg/**/*.go'
          deny:
            - pkg: github.com/spf13
              desc: pkg must not depend on cobra or pflag
            - pkg: go.farcloser.world/lepton/cmd
              desc: pkg must not depend on cmd files
    gocritic:
      disabled-checks:
        - appendAssign
        - ifElseChain
    staticcheck:
      checks:
        # Below is the default set
        - "all"
        - "-ST1000"
        - "-ST1003"
        - "-ST1016"
        - "-ST1020"
        - "-ST1021"
        - "-ST1022"

        ##### TODO: fix and enable these
        # 6 occurrences.
        # Apply De Morganâ€™s law https://staticcheck.dev/docs/checks#QF1001
        - "-QF1001"
        # 10 occurrences.
        # Convert if/else-if chain to tagged switch https://staticcheck.dev/docs/checks#QF1003
        - "-QF1003"

        ##### These have been vetted to be disabled.
        # 55 occurrences. Omit embedded fields from selector expression https://staticcheck.dev/docs/checks#QF1008
        # Usefulness is questionable.
        - "-QF1008"

    revive:
      enable-all-rules: true
      rules:
        # See https://revive.run/r

        ##### P0: we should do it ASAP.
        - name: max-control-nesting
          # 10 occurences (at default 5). Deep nesting hurts readibility.
          arguments: [7]
        - name: deep-exit
          # 11 occurrences. Do not exit in random places.
          disabled: true
        - name: unchecked-type-assertion
          # 14 occurrences. This is generally risky and encourages bad coding for newcomers.
          disabled: true
        - name: bare-return
          # 21 occurrences. Bare returns are just evil, very unfriendly, and make reading and editing much harder.
          disabled: true
        - name: import-shadowing
          # 91 occurrences. Shadowing makes things prone to errors / confusing to read.
          disabled: true

        ##### P1: consider making a dent on these, but not critical.
        - name: argument-limit
          # 4 occurrences (at default 8). Long windy arguments list for functions are hard to read. Use structs instead.
          arguments: [12]
        - name: unnecessary-stmt
          # 5 occurrences. Increase readability.
          disabled: true
        - name: defer
          # 7 occurrences. Confusing to read for newbies.
          disabled: true
        - name: confusing-naming
          # 10 occurrences. Hurts readability.
          disabled: true
        - name: early-return
          # 10 occurrences. Would improve readability.
          disabled: true
        - name: function-result-limit
          # 12 occurrences (at default 3). A function returning many results is probably too big.
          arguments: [7]
        - name: function-length
          # 155 occurrences (at default 0, 75). Really long functions should really be broken up in most cases.
          arguments: [0, 420]
        - name: cyclomatic
          # 204 occurrences (at default 10)
          arguments: [100]
        - name: unhandled-error
          # 222 occurrences. Could indicate failure to handle broken conditions.
          disabled: true
        - name: cognitive-complexity
          arguments: [197]
          # 441 occurrences (at default 7). We should try to lower it (involves significant refactoring).

        ##### P2: nice to have.
        - name: max-public-structs
          # 7 occurrences (at default 5). Might indicate overcrowding of public API.
          arguments: [21]
        - name: confusing-results
          # 13 occurrences. Have named returns when the type stutters.
          # Makes it a bit easier to figure out function behavior just looking at signature.
          disabled: true
        - name: comment-spacings
          # 50 occurrences. Makes code look less wonky / ease readability.
          disabled: true
        - name: use-any
          # 30 occurrences. `any` instead of `interface{}`. Cosmetic.
          disabled: true
        - name: empty-lines
          # 85 occurrences. Makes code look less wonky / ease readability.
          disabled: true
        - name: package-comments
          # 100 occurrences. Better for documentation...
          disabled: true
        - name: exported
          # 577 occurrences. Forces documentation of any exported symbol.
          disabled: true

        ###### Permanently disabled. Below have been reviewed and vetted to be unnecessary.
        - name: line-length-limit
          # Formatter `golines` takes care of this.
          disabled: true
        - name: nested-structs
          # 5 occurrences. Trivial. This is not that hard to read.
          disabled: true
        - name: flag-parameter
          # 52 occurrences. Not sure if this is valuable.
          disabled: true
        - name: unused-parameter
          # 505 occurrences. A lot of work for a marginal improvement.
          disabled: true
        - name: unused-receiver
          # 31 occurrences. Ibid.
          disabled: true
        - name: add-constant
          # 2605 occurrences. Kind of useful in itself, but unacceptable amount of effort to fix
          disabled: true

  exclusions:
    generated: disable

formatters:
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(go.farcloser.world)
        - localmodule
      no-inline-comments: true
      no-prefix-comments: true
      custom-order: true
    gofumpt:
      extra-rules: true
    golines:
      max-len: 120
      tab-len: 4
      shorten-comments: true
  enable:
    - gci
    - gofumpt
    - golines
  exclusions:
    generated: disable
